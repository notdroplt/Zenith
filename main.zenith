int : [0; 100; 1];

Rational : Fraction { int; int };

Optional t' : Has { t' } | Empty {};

`|>` x f : Optional t' -> (t' -> Optional u') -> Optional u'
 = match x {
  (Has v) -> f v;
  Empty -> Empty;
 };

module >> "@evaluate" {
  i = int;
  optint = Optional int;
  res1 = Empty;
  res2 = (Has 250);

}